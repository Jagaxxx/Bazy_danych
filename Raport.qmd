---
title: "Analiza danych firmy „Space-U”"
format:
  html:
    toc: true
    toc-title: "Spis treści"
    toc-depth: 4
    css: styles.css
editor: visual
execute:
  eval: true
---

### 1. Wstęp

#### 1.1. Cel i zakres raportu

Niniejszy raport został wykonany na zlecenie firmy „Space-U”, organizującej konsumenckie załogowe loty kosmiczne, a w szczególności wycieczki z jasną i ciemną stroną mocy w świecie Star Wars. Celem raportu jest analiza danych zebranych przez firmę podczas 2 lat obecności na rynku, która pozwoli na wyciągnięcie wniosków na temat dotychczasowej działalności - związanych z nią kosztów oraz zysków, a także stosunku klientów do proponowanych ofert. Dzięki temu, możliwe będzie wskazanie kierunku rozwoju dla firmy w najbliższej przyszłości.

W niniejszej analizie skoncentrujemy się na udzieleniu odpowiedzi na następujące pytania:

-   Które rodzaje wycieczek oferowanych przez firmę „Space-U” cieszą się największą popularnością? Jak przedstawia się bilans zysków i strat dla poszczególnych typów podróży? Czy są dla firmy opłacalne?
-   Jak kształtuje się liczba obsłużonych klientów w poszczególnych miesiącach działalności? Czy na podstawie tych danych można wnioskować o rozwoju lub spadku aktywności firmy?
-   Jakie typy wycieczek skłaniają klientów do ponownego skorzystania z usług firmy? Czy istnieją oferty, po których klienci nie wracają? Czy można na tej podstawie wycofać niektóre wycieczki z oferty?
-   Który z typów wycieczek cieszy się większą popularnością – wycieczki z jasną czy ciemną stroną mocy?
-   Jak często podczas wyjazdów zdarzają się wypadki konkretnych typów i jaka część klientów jest ubezpieczona na wypadek ich wystąpienia?
-   Czy najlepiej oceniane wycieczki są również najczęściej wybierane przez klientów?
-   Które duety pracowników – pilot i przewodnik – najczęściej wspólnie realizowały wyjazdy?

### 2. Analiza popularności wycieczek

```{r}
#| echo: false
#| warning: false

library(dplyr)
library(DBI)
library(tidyr)
library(scales)
```

Jednym z ważnych aspektów działalności firmy turystycznej jest dopasowanie oferty do oczekiwań klientów. Dlatego analiza popularności poszczególnych typów wycieczek ma kluczowe znaczenie – pozwala lepiej planować działania marketingowe, rozwijać ofertę oraz skupić się na tych wyjazdach, które cieszą się największym zainteresowaniem. Dzięki temu firma może efektywniej wykorzystywać zasoby i zwiększać satysfakcję klientów.

```{r}
#| echo: false
#| warning: false
library(RMariaDB)
library(ggplot2)

#połączenie z bazą danych
con <- dbConnect(RMariaDB::MariaDB(),
                 dbname = "team12",
                 username = "team12",
                 password = "te@mliz",
                 host = "giniewicz.it")
```

#### 2.1. Liczba lotów według rodzajów wycieczek

Na podstawie danych zgromadzonych w bazie danych, możliwe było określenie, które wycieczki cieszyły się największą popularnością wśród klientów. Spójrzmy teraz na liczbę zorganizowanych wylotów dla poszczególnych wycieczek.

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 1. Liczba lotów przypadających na poszczególne wycieczki"

# Pobieramy dane
query1_1 <- "
SELECT trip_type.trip_name, trip_type.force_side
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip;
"

df1_1 <- dbGetQuery(con, query1_1)

# Zliczanie lotów na wycieczkę
df1_1_summary <- df1_1 %>%
  group_by(trip_name) %>%
  summarise(
    liczba_lotow = n(),
    force_side = first(force_side),
    .groups = "drop"
  )

# Łączna liczba wycieczek
laczna_liczba_wycieczek <- sum(df1_1_summary$liczba_lotow)

najpopularniejsza <- df1_1_summary %>%
  slice_max(order_by = liczba_lotow, n = 1, with_ties = FALSE)

najmniej_popularna <- df1_1_summary %>%
  slice_min(order_by = liczba_lotow, n = 1, with_ties = FALSE)

ggplot(df1_1_summary, aes(x = reorder(trip_name, -liczba_lotow),
                          y = liczba_lotow,
                          fill = force_side)) +
  geom_col() +
  geom_text(aes(label = liczba_lotow),
            vjust = -0.2, size = 3) +  # mniejszy tekst nad słupkami
  scale_fill_manual(values = c("jasna" = "lightblue", "ciemna" = "pink")) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +  # więcej miejsca na tekst
  labs(title = "Popularność wycieczek",
       x = "Wycieczka",
       y = "Liczba lotów",
       fill = "Strona Mocy") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9),
    axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 8),
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 8)
  )

```

Łącznie zorganizowano `r laczna_liczba_wycieczek` wyjazdów. Najczęściej wybieraną wycieczką była  „`r najpopularniejsza[1]`”, która odbyła się `r najpopularniejsza[2]` razy. Z kolei najmniej popularna okazała się wycieczka  „`r najmniej_popularna[1]`”, z liczbą wylotów równą `r najmniej_popularna[2]`.

#### 2.2. Liczba klientów w podziale na typy wycieczek

Sprawdźmy jak wygląda to w przypadku ilości obsłużonych podróżnych.

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 2. Liczba klientów przypadających na poszczególne wycieczki"

df <- dbGetQuery(con, "
  SELECT 
    payment.id_payment,
    payment.id_spaceflight,
    spaceflight.id_trip,
    trip_type.trip_name,
    trip_type.force_side
  FROM payment
  JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight
  JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
")

# Liczby klientów
klienci_na_wycieczke <- df %>%
  group_by(trip_name, force_side) %>%
  summarise(liczba_klientow = n(), .groups = "drop") %>%
  arrange(desc(liczba_klientow))

# Łączna liczba klientów
laczna_liczba_klientow <- sum(klienci_na_wycieczke$liczba_klientow)

# Wycieczka z największą liczbą klientów
najwiecej_klientow <- klienci_na_wycieczke %>%
  slice_max(order_by = liczba_klientow, n = 1, with_ties = FALSE)

# Wycieczka z najmniejszą liczbą klientów
najmniej_klientow <- klienci_na_wycieczke %>%
  slice_min(order_by = liczba_klientow, n = 1, with_ties = FALSE)

# Wykres
ggplot(klienci_na_wycieczke, aes(x = reorder(trip_name, -liczba_klientow), y = liczba_klientow, fill = force_side)) +
  geom_col() +
  geom_text(aes(label = liczba_klientow), vjust = -0.3, size = 3) +
  scale_fill_manual(values = c("jasna" = "lightblue", "ciemna" = "pink")) +
  labs(
    title = "Liczba klientów na wycieczkę",
    x = "Wycieczka",
    y = "Liczba klientów",
    fill = "Strona mocy"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9),
    axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 8),
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 8)
  )
```

Łącznie firma obsłużyła `r laczna_liczba_klientow` klientów. Najpopularniejsza wycieczka pod względem liczby klientów to „`r najwiecej_klientow[1]`” (`r najwiecej_klientow[3]` klientów), najmniej popularna okazała się  „`r najmniej_klientow[1]`” (`r najmniej_klientow[3]` klientów).

#### 2.3. Bilans zysków i strat dla poszczególnych wycieczek

Analiza bilansu zysków i strat dla różnych typów wycieczek oferowanych przez firmę stanowi kluczowy element oceny rentowności działalności. Pozwala ona nie tylko ocenić, które rodzaje wycieczek generują największe przychody, ale również które wiążą się z najwyższymi kosztami operacyjnymi, co ma bezpośredni wpływ na ostateczny zysk.

Zestawiono przychody ze sprzedaży różnych ofert z odpowiadającymi im kosztami operacyjnymi – takimi jak zakwaterowanie, wyżywienie, transport, opłaty przewodników czy logistyka. Analiza wykazała, które typy wyjazdów generują najwyższy zysk netto, a które są mniej rentowne lub wręcz nierentowne.

W pierwszym kroku posłużono się średnią ceną jednej wycieczki, co pozwoliło porównać opłacalność na poziomie pojedynczego wyjazdu.

```{r}
#| echo: false
#| warning: false
#| fig.width: 8
#| fig.height: 6
#| fig.align: "center"
#| fig-cap: "Wykres 3. Średnie koszty, przychody i zysk z każdej wycieczki"

# Pobranie danych
query <- "
SELECT 
  spaceflight.id_spaceflight,
  spaceflight.id_trip,
  spaceflight.departure_date,
  spaceflight.return_date,
  spaceflight.organization_cost,
  trip_type.trip_name,
  trip_type.daily_cost_per_participant,
  trip_type.customer_price_total,
  payment.id_payment,
  payment.id_insurance,
  insurance.price AS insurance_price,
  insurance.commission_rate
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
LEFT JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
LEFT JOIN insurance ON payment.id_insurance = insurance.id_insurance
"

df <- dbGetQuery(con, query)

# Przetwarzanie dat i czasu trwania oraz obliczenie prowizji
df <- df %>%
  mutate(
    departure_date = as.Date(departure_date),
    return_date = as.Date(return_date),
    duration_days = as.numeric(return_date - departure_date),
    prowizja = insurance_price * commission_rate
  )

# Liczba klientów i suma prowizji dla każdego lotu
lot_statystyki <- df %>%
  group_by(id_spaceflight) %>%
  summarise(
    liczba_klientow = n(),
    suma_prowizji = sum(prowizja, na.rm = TRUE),
    .groups = "drop"
  )

# Scalenie z unikalnymi lotami i dołączenie statystyk
df_unique <- df %>%
  distinct(id_spaceflight, .keep_all = TRUE) %>%
  left_join(lot_statystyki, by = "id_spaceflight")

# Obliczenia kosztów i przychodów
df_obliczone <- df_unique %>%
  mutate(
    koszt_organizacji = organization_cost,
    koszt_utrzymania = duration_days * daily_cost_per_participant * liczba_klientow,
    koszt_calkowity = koszt_organizacji + koszt_utrzymania,
    przychod_bilety = liczba_klientow * customer_price_total,
    przychod = przychod_bilety + suma_prowizji
  )

# Obliczenia średnich wartości dla każdej wycieczki
srednie <- df_obliczone %>%
  group_by(trip_name) %>%
  summarise(
    sredni_koszt_organizacji = mean(koszt_organizacji),
    sredni_koszt_utrzymania = mean(koszt_utrzymania),
    sredni_koszt_lacznie = mean(koszt_calkowity),
    sredni_przychod = mean(przychod),
    srednia_roznica = sredni_przychod - sredni_koszt_lacznie,
    .groups = "drop"
  )

# Przygotowanie danych do wykresu w formacie long
dane_long <- srednie %>%
  select(trip_name, Koszty = sredni_koszt_lacznie, Przychód = sredni_przychod, Zysk = srednia_roznica) %>%
  pivot_longer(cols = -trip_name, names_to = "typ", values_to = "wartosc")

# Wykres słupkowy
ggplot(dane_long, aes(x = trip_name, y = wartosc, fill = typ)) +
  geom_col(position = position_dodge(width = 0.9)) +
  geom_text(aes(label = ifelse(wartosc >= 1e6,
                               paste0(round(wartosc / 1e6, 1), " M"),
                               ifelse(wartosc >= 1e3,
                                      paste0(round(wartosc / 1e3, 1), " k"),
                                      round(wartosc)))),
            position = position_dodge(width = 0.9),
            vjust = -0.3, size = 3) +
  scale_y_continuous(labels = scales::label_number(big.mark = " ", decimal.mark = ",")) +
  scale_fill_manual(values = c("Koszty" = "pink", "Przychód" = "lightblue", "Zysk" = "lightgreen")) +
  labs(
    title = "Średnie koszty, przychody i zysk z każdej wycieczki",
    x = "Wycieczka",
    y = "Kwota",
    fill = "Rodzaj"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9),
    axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 8),
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 8)
  )
```

W celu uzyskania pełniejszego obrazu rentowności działalności firmy, przeprowadzono także analizę łącznych zysków generowanych przez wycieczki do poszczególnych planet, z uwzględnieniem liczby uczestników. W odróżnieniu od wcześniejszego zestawienia, które bazowało na średnich wartościach dla jednej wycieczki (jeden wylot), niniejsze podsumowanie uwzględnia realną skalę sprzedaży – czyli ilość podróżnych, którzy skorzystali z każdej z ofert. Takie podejście pozwala precyzyjnie określić, które kierunki nie tylko są popularne, ale również najbardziej dochodowe w ujęciu globalnym.

```{r}
#| echo: false
#| warning: false
#| fig.width: 8
#| fig.height: 6
#| fig.align: "center"
#| fig-cap: "Wykres 4. Suma kosztów, przychodów i zysków z każdej wycieczki"

# Pobranie danych
query <- "
SELECT 
  spaceflight.id_spaceflight,
  spaceflight.id_trip,
  spaceflight.departure_date,
  spaceflight.return_date,
  spaceflight.organization_cost,
  trip_type.trip_name,
  trip_type.daily_cost_per_participant,
  trip_type.customer_price_total,
  payment.id_payment,
  payment.id_insurance,
  insurance.price AS insurance_price,
  insurance.commission_rate
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
LEFT JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
LEFT JOIN insurance ON payment.id_insurance = insurance.id_insurance
"

df <- dbGetQuery(con, query)

# Przetwarzanie dat i prowizji
df <- df %>%
  mutate(
    departure_date = as.Date(departure_date),
    return_date = as.Date(return_date),
    duration_days = as.numeric(return_date - departure_date),
    prowizja = insurance_price * commission_rate
  )

# Liczba klientów i suma prowizji dla każdego lotu
liczba_klientow_df <- df %>%
  group_by(id_spaceflight) %>%
  summarise(
    liczba_klientow = n(),
    suma_prowizji = sum(prowizja, na.rm = TRUE),
    .groups = "drop"
  )

# Usunięcie duplikatów
df_unique <- df %>%
  distinct(id_spaceflight, .keep_all = TRUE) %>%
  left_join(liczba_klientow_df, by = "id_spaceflight")

# Obliczenia kosztów i przychodów (z prowizją)
df_obliczone <- df_unique %>%
  mutate(
    koszt_organizacji = organization_cost,
    koszt_utrzymania = duration_days * daily_cost_per_participant * liczba_klientow,
    koszt_calkowity = koszt_organizacji + koszt_utrzymania,
    przychod_bilety = liczba_klientow * customer_price_total,
    przychod = przychod_bilety + suma_prowizji
  )

# Sumowanie po wycieczkach
suma <- df_obliczone %>%
  group_by(trip_name) %>%
  summarise(
    suma_koszt_organizacji = sum(koszt_organizacji),
    suma_koszt_utrzymania = sum(koszt_utrzymania),
    suma_koszt_lacznie = sum(koszt_calkowity),
    suma_przychod = sum(przychod),
    zysk = suma_przychod - suma_koszt_lacznie,
    .groups = "drop"
  )

# Przygotowanie danych do wykresu (long format)
dane_long <- suma %>%
  select(trip_name, Koszty = suma_koszt_lacznie, Przychód = suma_przychod, Zysk = zysk) %>%
  pivot_longer(cols = -trip_name, names_to = "typ", values_to = "wartosc")

# Wykres
ggplot(dane_long, aes(x = trip_name, y = wartosc, fill = typ)) +
  geom_col(position = position_dodge(width = 0.9)) +
  geom_text(aes(label = ifelse(wartosc >= 1e6,
                               paste0(round(wartosc / 1e6, 1), " M"),
                               ifelse(wartosc >= 1e3,
                                      paste0(round(wartosc / 1e3, 1), " k"),
                                      round(wartosc)))),
            position = position_dodge(width = 0.9), 
            vjust = -0.3, size = 3) +
  scale_y_continuous(
    labels = scales::label_number(big.mark = " ", decimal.mark = ",")
  ) +
  scale_fill_manual(values = c("Koszty" = "pink", "Przychód" = "lightblue", "Zysk" = "lightgreen")) +
  labs(
    title = "Suma kosztów, przychodów i zysków z każdej wycieczki",
    x = "Wycieczka",
    y = "Kwota",
    fill = "Rodzaj"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9),
    axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 8),
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 8)
  )
```

```{r}
#| echo: false
# Znalezienie najbardziej dochodowej wycieczki
najlepsza_wycieczka <- suma %>%
  arrange(desc(zysk)) %>%
  slice(1)
```
Jak pokazuje wykres, najbardziej dochodową wycieczką dla firmy okazała się wycieczka „`r najlepsza_wycieczka$trip_name`”, która wygenerowała zysk na poziomie `r format(round(najlepsza_wycieczka$zysk, 2), big.mark = " ", scientific = FALSE)` SpaceCoinów.

#### 2.4. Łączna dochodowość – analiza ogólna

Na zakończenie analizy działalności firmy dokonano zestawienia podstawowych danych finansowych. Uwzględniono trzy kluczowe elementy: koszty, przychody oraz zysk.

Na całkowite koszty złożyły się:

-   Koszty organizacji wyjazdów,

-   Koszty związane z zakwaterowaniem i wyżywieniem klientów podczas wycieczki,

-   Koszty wynagrodzeń pracowników.

Przychody, to łączna kwota uzyskana od klientów za wszystkie sprzedane wycieczki oraz prowizja od ubezpieczenia.

Zysk został obliczony jako różnica między przychodami a kosztami.

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 5. Podsumowanie finansowe firmy - łączne koszty, przychód i zysk"

# Pobranie danych
query <- "
SELECT 
  spaceflight.id_spaceflight,
  spaceflight.id_trip,
  spaceflight.departure_date,
  spaceflight.return_date,
  spaceflight.organization_cost,
  trip_type.daily_cost_per_participant,
  trip_type.customer_price_total,
  payment.id_payment,
  payment.id_insurance,
  insurance.price AS insurance_price,
  insurance.commission_rate
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
LEFT JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
LEFT JOIN insurance ON payment.id_insurance = insurance.id_insurance
"

df <- dbGetQuery(con, query)

# Dane o pracownikach
employee_df <- dbGetQuery(con, "SELECT hire_date, leave_date, salary FROM employee")

# Przetwarzanie dat i obliczanie prowizji
df <- df %>%
  mutate(
    departure_date = as.Date(departure_date),
    return_date = as.Date(return_date),
    duration_days = as.numeric(return_date - departure_date),
    prowizja = insurance_price * commission_rate
  )

# Liczba klientów i suma prowizji na każdy lot
liczba_klientow_df <- df %>%
  group_by(id_spaceflight) %>%
  summarise(
    liczba_klientow = n(),
    suma_prowizji = sum(prowizja, na.rm = TRUE),
    .groups = "drop"
  )

# Połączenie z unikalnymi lotami
df_unique <- df %>%
  distinct(id_spaceflight, .keep_all = TRUE) %>%
  left_join(liczba_klientow_df, by = "id_spaceflight")

# Obliczenia kosztów i przychodów
df_obliczone <- df_unique %>%
  mutate(
    koszt_organizacji = organization_cost,
    koszt_utrzymania = duration_days * daily_cost_per_participant * liczba_klientow,
    przychod_bilety = liczba_klientow * customer_price_total,
    przychod = przychod_bilety + suma_prowizji
  )

# SUMA kosztów i przychodów z lotów
suma_koszt_organizacji <- sum(df_obliczone$koszt_organizacji, na.rm = TRUE)
suma_koszt_utrzymania <- sum(df_obliczone$koszt_utrzymania, na.rm = TRUE)
suma_prowizji <- sum(df_obliczone$suma_prowizji, na.rm = TRUE)
suma_cena_biletow <- sum(df_obliczone$przychod_bilety, na.rm = TRUE)
suma_przychod <- sum(df_obliczone$przychod, na.rm = TRUE)

# Koszt wynagrodzeń pracowników
dzisiaj <- as.Date("2100-01-01")

employee_df <- employee_df %>%
  mutate(
    hire_date = as.Date(hire_date),
    leave_date = as.character(leave_date),
    leave_date = ifelse(is.na(leave_date) | leave_date == "None",
                        as.character(dzisiaj),
                        leave_date),
    leave_date = as.Date(leave_date),
    dni_pracy = as.numeric(leave_date - hire_date),
    miesiace_pracy = dni_pracy / 30,
    wyplata = miesiace_pracy * salary
  )

suma_wyplaty <- sum(employee_df$wyplata, na.rm = TRUE)

# Całkowite koszty i zysk
suma_koszt_calkowity <- suma_koszt_organizacji + suma_koszt_utrzymania + suma_wyplaty
zysk_firmy <- suma_przychod - suma_koszt_calkowity

# Dane do wykresu
df_wykres <- data.frame(
  Rodzaj = c("Koszty", "Przychód", "Zysk"),
  Kwota = c(suma_koszt_calkowity, suma_przychod, zysk_firmy)
)

# Wykres
ggplot(df_wykres, aes(x = Rodzaj, y = Kwota, fill = Rodzaj)) +
  geom_col(width = 0.6) +
  geom_text(
    aes(label = format(Kwota, big.mark = " ", scientific = FALSE)),
    vjust = -0.3,
    size = 3
  ) +
  scale_y_continuous(
    labels = scales::label_number(big.mark = " ", decimal.mark = ",")
  ) +
  scale_fill_manual(values = c("Koszty" = "pink", "Przychód" = "lightblue", "Zysk" = "lightgreen")) +
  labs(
    title = "Podsumowanie finansowe firmy",
    x = "",
    y = "Kwota"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold", hjust = 0.5),
    axis.title.y = element_text(size = 9),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 8),
    legend.position = "none"
  )

```

Ostatecznie uzyskano:

-   Koszt organizacji lotów wyniósł `r format(suma_koszt_organizacji, big.mark = " ", scientific = FALSE)` SpaceCoinów. Obejmuje on głównie wydatki związane z transportem oraz logistyką podróży.
-   Koszt utrzymania klientów podczas wycieczek wyniósł `r format(suma_koszt_utrzymania, big.mark = " ", scientific = FALSE)` SpaceCoinów. W skład tej kategorii wchodzą m.in. zakwaterowanie, wyżywienie, usługi przewodników i atrakcje w ramach programu wycieczki.
-   Wypłaty dla pracowników stanowiły `r format(suma_wyplaty, big.mark = " ", scientific = FALSE)` SpaceCoinów.

Łącznie koszty operacyjne firmy osiągnęły poziom `r format(suma_koszt_calkowity, big.mark = " ", scientific = FALSE)` SpaceCoinów.\
Przychód ze sprzedaży biletów na wycieczki osiągnął wartość `r format(suma_cena_biletow, big.mark = " ", scientific = FALSE)` SpaceCoinów, natomiast z tytułu prowizji od ubezpieczeń uzyskano dodatkowe `r format(suma_prowizji, big.mark = " ", scientific = FALSE)` SpaceCoinów. Łączny przychód firmy wyniósł `r format(suma_przychod, big.mark = " ", scientific = FALSE)` SpaceCoinów. Na tej podstawie wyliczono zysk, który osiągnął poziom `r format(zysk_firmy, big.mark = " ", scientific = FALSE)` SpaceCoinów.

### 3. Rozwój firmy na przestrzeni lat

Celem przeprowadzonej analizy jest sprawdzenie, czy na podstawie liczby obsłużonych klientów w poszczególnych miesiącach można ocenić, czy firma się rozwija, czy podupada. W tym celu dane zostały przedstawione na wykresach, które umożliwiają identyfikowanie trendów oraz zmian w liczbie klientów na przestrzeni czasu.

#### 3.1. Analiza w kontekście rocznym

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 6. Liczba klientów w podziale na lata"

query_2g_2 <- "SELECT COUNT(p.id_customer) AS liczba_klientow,
                 DATE_FORMAT(spf.departure_date, '%Y') AS rok
FROM spaceflight AS spf
INNER JOIN payment AS p ON spf.id_spaceflight = p.id_spaceflight
GROUP BY rok
ORDER BY rok;"

df <- dbGetQuery(con, query_2g_2)
df$liczba_klientow <- as.integer(df$liczba_klientow)

ggplot(df, aes(x = rok, y = liczba_klientow)) +
  geom_col(fill = "lightblue") +
  labs(title = "Liczba klientów - zestawienie lat",
       x = "Rok",
       y = "Liczba klientów") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

max_idx <- which.max(df$liczba_klientow)
min_idx <- which.min(df$liczba_klientow)

best_year <- as.character(df$rok[max_idx]) 
worse_year <- as.character(df$rok[min_idx])

b_number_of_clients <- df$liczba_klientow[max_idx]
w_number_of_clients <- df$liczba_klientow[min_idx]
difference <- abs(b_number_of_clients - w_number_of_clients)

# Tworzenie informacji tekstowej
if (best_year > worse_year) {
  str <- paste("możemy stwierdzić, że z roku na rok w naszej firmie przybywa coraz więcej klientów. W roku", 
               best_year, "było", b_number_of_clients,"klientów. To o", 
               difference,"klientów więcej niż w roku", 
               worse_year,".")
} else if (best_year < worse_year) {
  str <- paste("możemy stwierdzić, że z roku na rok w naszej firmie ubywa klientów. W roku", 
               worse_year,"było", w_number_of_clients,"klientów. To o", 
               difference,"klientów mniej niż w roku", 
               best_year,".")
} else {
  str <- "możemy stwierdzić, że liczba klientów się nie zmieniła na przestrzeni lat. Świadczyć to może o tym, że sytuacja firmy jest stabilna."
}
```

Porównując dane na tle lat `r str`

#### 3.2. Analiza w kontekście miesięcznym

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 7. Liczba klientów według miesiąca"

query_2g <- "SELECT COUNT(p.id_customer) AS liczba_klientow,
                 DATE_FORMAT(spf.departure_date, '%Y-%m') AS data
FROM spaceflight AS spf
INNER JOIN payment AS p ON spf.id_spaceflight = p.id_spaceflight
GROUP BY data
ORDER BY data;"

df <- dbGetQuery(con, query_2g)
df$liczba_klientow <- as.integer(df$liczba_klientow)

df$rok <- as.numeric(substr(df$data, 1, 4))

df$miesiac <- as.numeric(substr(df$data, 6, 7))

ggplot(df, aes(x = data, y = liczba_klientow, fill = as.factor(rok))) + 
  geom_col() + 
  labs(title = "Liczba klientów według miesiąca",
       x = "Rok-miesiąc",
       y = "Liczba klientów",
       fill = "Rok") + 
  scale_fill_manual(values = c("2098" = "pink", "2099" = "lightblue")) + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

df_max_miesiac <- df %>%
  group_by(rok) %>%
  slice_max(liczba_klientow, n = 1, with_ties = FALSE)

months <- c("styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień")

best_month_best_year <- df_max_miesiac[df_max_miesiac[, "rok"] == best_year, "miesiac"]$miesiac
best_month_worse_year <- df_max_miesiac[df_max_miesiac[, "rok"] == worse_year, "miesiac"]$miesiac

bm_by_number_of_clients <- df_max_miesiac[df_max_miesiac[, "rok"] == best_year, "liczba_klientow"]$liczba_klientow

bm_wy_number_of_clients <- df_max_miesiac[df_max_miesiac[, "rok"] == worse_year, "liczba_klientow"]$liczba_klientow

if (best_year > worse_year){
  if (bm_by_number_of_clients > bm_wy_number_of_clients){
    text <- paste("W roku", best_year, "miesiąc, w którym najwięcej klientów skorzystało z usługi to ", months[best_month_best_year], ". Dla porównania w roku", worse_year, "najbardziej zyskownym miesiącem był", months[best_month_worse_year], ".")
  } else {
    text <- paste("W roku", best_year, "miesiąc, w którym najwięcej klientów skorzystało z usługi to ", months[best_month_best_year], ". Dla porównania w roku", worse_year, "najbardziej zyskownym miesiącem był", months[best_month_worse_year], ". Mimo tego, że najbardziej zyskownym miesiącem w historii istnienia firmy był ", months[best_month_worse_year], ", to w roku ", best_year, " było więcej klientów ogółem.")
  }
} else {
  if (bm_by_number_of_clients < bm_wy_number_of_clients){
    text <- paste("W roku ", best_year, " miesiąc, w którym najwięcej klientów skorzystało z usługi to ", months[best_month_best_year], ". Dla porównania w roku ", worse_year, " najbardziej zyskownym miesiącem był ", months[best_month_worse_year], ".")
  } else {
    text <- paste("W roku ", best_year, " miesiąc, w którym najwięcej klientów skorzystało z usługi to ", months[best_month_best_year], ". Dla porównania w roku ", worse_year, " najbardziej zyskownym miesiącem był ", months[best_month_worse_year], ". Mimo tego, że najbardziej zyskownym miesiącem w historii naszej firmy był ", months[best_month_best_year], " to niestety liczba klientów z roku na rok spada.")
  }
}
```

`r text`

### 4. Powrót klientów i ich preferencje

Kolejnym obszarem analizy była skłonność klientów do ponownego skorzystania z oferty firmy „Space-U”. W tym celu klienci zostali podzieleni na 2 grupy: osoby, które w ciągu 2 lat działalności firmy wzięły udział wyłącznie w jednej wycieczce, oraz tych, którzy zdecydowali się na więcej niż jeden wyjazd. Dla każdej z grup zliczono wycieczki, które wybrano podczas pierwszych wylotów – pierwsze wrażenia zdecydowały o tym, czy klienci ponownie obdarzyli firmę zaufaniem, czy też nie.

#### 4.1. Klienci powracający

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 8. Liczba klientów, którzy wrócili do firmy po danej wycieczce"

query3_1 <- "WITH more_than_one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) > 1))


SELECT trip_name AS nazwa_wycieczki, COUNT(*) AS liczba_klientów
FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY id_customer) AS rn
    FROM more_than_one_trip) AS subquery
WHERE rn = 1
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 3"

df3_1 <- dbGetQuery(con, query3_1)
df3_1$liczba_klientów <- as.integer(df3_1$liczba_klientów)

query3_1_1 <- "WITH more_than_one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) > 1))

SELECT trip_name AS nazwa_najczesciej_powtarzanej_wycieczki, COUNT(*) AS liczba_klientów
FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY id_customer) AS rn
    FROM more_than_one_trip) AS subquery
WHERE rn = 1
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 1"

df3_1_1 <- dbGetQuery(con, query3_1_1)

most_repeated_trip <- df3_1_1$nazwa_najczesciej_powtarzanej_wycieczki


ggplot(df3_1, aes(x = df3_1$nazwa_wycieczki, y = df3_1$liczba_klientów)) +
  geom_col(fill = "lightblue") +
  labs(title = "Liczba klientów, którzy wrócili do firmy po danej wycieczce", x = "Nazwa wycieczki", y = "Liczba klientów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

Analizując powracających klientów, zauważyliśmy, że osoby, które zdecydowały się na więcej niż jeden wyjazd, najczęściej wybierały podczas pierwszej podróży następujące wycieczki: `r df3_1$nazwa_wycieczki[1]`, `r df3_1$nazwa_wycieczki[2]`, `r df3_1$nazwa_wycieczki[3]`. Najwięcej klientów, którzy wrócili ponownie byli klienci, którzy za pierwszym razem wybrali wycieczkę: `r most_repeated_trip` (łącznie `r df3_1_1$liczba_klientów` klientów). Może to oznaczać, że zwiedzającym spodobał się klimat wycieczki, a w planie firmy na najbliższy czas należy uwzględnić organizację większej liczby wycieczek tego typu bądź wprowadzić do oferty więcej rodzajów wyjazdów w podobnym klimacie.

#### 4.2. Klienci jednorazowi

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 9. Liczba klientów, którzy nie wrócili do firmy po danej wycieczce"

query3_2 <- "WITH one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) = 1))

SELECT trip_name AS nazwa_wycieczki, COUNT(*) AS liczba_klientów
FROM one_trip
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 3"

df3_2 <- dbGetQuery(con, query3_2)
df3_2$liczba_klientów <- as.integer(df3_2$liczba_klientów)

query3_2_1 <- "WITH one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) = 1))

SELECT trip_name AS nazwa_wycieczki, COUNT(*) AS liczba_klientów
FROM one_trip
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 1"

df3_2_1 <- dbGetQuery(con, query3_2_1)


ggplot(df3_2, aes(x = df3_2$nazwa_wycieczki, y = df3_2$liczba_klientów)) +
  geom_col(fill = "lightblue") +
  labs(title = "Liczba klientów, którzy nie wrócili do firmy po danej wycieczce", x = "Nazwa wycieczki", y = "Liczba klientów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

Klienci, którzy nie zdecydowali się na ponowny udział w wyjazdach organizowanych przez „Space-U”, najczęściej wybierali na pierwszym wyjeździe następujące wycieczki: `r df3_2$nazwa_wycieczki[1]`, `r df3_2$nazwa_wycieczki[2]`, `r df3_2$nazwa_wycieczki[3]`. Najczęściej wybieraną wśród nich wycieczką była wycieczka o nazwie `r df3_2_1$nazwa_wycieczki`, na którą wybrało się `r df3_2_1$liczba_klientów` klientów.

Porównując obydwa wykresy, można zauważyć, że liczba osób powracających na kolejne wycieczki jest znacznie niższa niż osób niepowracających, a także że lista wycieczek, po których klienci powrócili, pokrywa się częściowo z listą wycieczek, po których nie wrócili.
Może to wskazywać, że oferta tych wycieczek nie odpowiada w pełni oczekiwaniom znacznej części klientów, co może być przyczyną ich decyzji o niekorzystaniu z kolejnych wyjazdów organizowanych przez firmę. Warto w związku z tym rozważyć wprowadzenie zmian w programie tych wycieczek, aby spełniały oczekiwania większej liczby klientów. Jeśli mimo to zainteresowanie kolejnymi wyjazdami pozostanie niskie, należy rozważyć wycofanie danych wycieczek z oferty i zastąpienie ich bardziej atrakcyjnymi propozycjami.

### 5. Jasna czy ciemna strona mocy?

Firmę „Space-U” interesuje również, która ze stron mocy cieszy się większą popularnością wśród turystów - czy więcej osób wybiera się na wycieczki z jasną, czy z ciemną stroną mocy? Odpowiedź na to pytanie pomoże firmie lepiej dopasować ofertę wycieczek do oczekiwań klientów w najbliższej przyszłości. Aby uzyskać odpowiedź, liczymy, ile było rezerwacji wycieczek każdego z dwóch typów.

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 10. Liczba klientów w zależności od strony mocy"

query4 <- "SELECT force_side AS strona_mocy, COUNT(*) AS liczba_klientów
FROM spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
INNER JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
GROUP BY force_side ORDER BY COUNT(*) DESC"

df4 <- dbGetQuery(con, query4)
df4$liczba_klientów <- as.integer(df4$liczba_klientów)

query4_1 <- "SELECT force_side AS strona_mocy, COUNT(*) AS liczba_klientów
FROM spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
INNER JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
GROUP BY force_side ORDER BY COUNT(*) DESC LIMIT 1"

more_popular_force_side <- dbGetQuery(con, query4_1)

query4_2 <- "SELECT force_side AS strona_mocy, COUNT(*) AS liczba_klientów
FROM spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
INNER JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
GROUP BY force_side ORDER BY COUNT(*) ASC LIMIT 1"

less_popular_force_side <- dbGetQuery(con, query4_2)

ggplot(df4, aes(x = strona_mocy, y = liczba_klientów, fill = strona_mocy)) +
  geom_col() +
  scale_fill_manual(values = c("ciemna" = "pink", "jasna" = "lightblue")) +
  labs(
    title = "Liczba klientów w zależności od strony mocy",
    x = "Strona mocy",
    y = "Liczba klientów",
    fill = "Strona mocy"
  ) +
  theme_minimal()
```

```{r}
#| echo: false
#| warning: false

if (more_popular_force_side$liczba_klientów == less_popular_force_side$liczba_klientów) {
  str_5_observations <- paste("Możemy zaobserwować, że liczba klientów, którzy wybrali jasną oraz ciemną stronę mocy, jest dokładnie taka sama. Każdą ze stron mocy wybrało ", more_popular_force_side$liczba_klientów, " osób.")
} else {
  str_5_observations <- paste("Z powyższego wykresu odczytać można, że to ", more_popular_force_side$strona_mocy, " strona mocy cieszy się większą popularnością wśród klientów firmy - na wycieczki tego typu wybrało się ", more_popular_force_side$liczba_klientów, " klientów, natomiast wycieczki oznaczone jako ", less_popular_force_side$strona_mocy, " strona mocy wybrało ", less_popular_force_side$liczba_klientów, " klientów.")
}

if (more_popular_force_side$liczba_klientów - less_popular_force_side$liczba_klientów < 10) {
  str_5 <- "Możemy zaobserwować, że liczba klientów, którzy wybrali jasną oraz ciemną stronę mocy, nie różni się znacznie - obydwie strony mocy cieszą się podobnym zainteresowaniem. Oznacza to, że firma może rozwijać swoją ofertę, przygotowując kolejne propozycje wycieczek zarówno z jasną, jak i ciemną stroną mocy."
} else {
  str_5 <- paste("Wobec większego zainteresowania klientów wyjazdami oznaczonymi jako ", more_popular_force_side$strona_mocy, " strona mocy, można wprowadzić do oferty firmy więcej wycieczek właśnie tego typu.")
}

```

`r str_5_observations`

`r str_5`

### 6. Bezpieczeństwo

Celem przeprowadzonej analizy jest sprawdzenie, jak często podczas podróży dochodzi do wypadków poszczególnych typów oraz jak duża część klientów jest ubezpieczona od skutków takiej sytuacji. W tym celu dane zostały przedstawione na wykresie, umożliwiającym identyfikowanie najczęściej występujących wypadków oraz ocenę stopnia ubezpieczenia klientów w obliczu takiego ryzyka.

#### 6.1. Liczba i częstotliwość wypadków

```{r}
#| echo: false
#| warning: false
#| fig.align: "center"
#| fig-cap: "Wykres 11. Liczba wypadków podczas podróży"

query_2 <- "SELECT COUNT(ar.id_accident) AS liczba_wypadkow, at.accident_type AS rodzaj_wypadku
FROM accident_report AS ar
INNER JOIN accident_type AS at ON ar.id_accident = at.id_accident
GROUP BY ar.id_accident;"

df <- dbGetQuery(con, query_2)
df$liczba_wypadkow <- as.integer(df$liczba_wypadkow)


ggplot(df, aes(x = rodzaj_wypadku, y = liczba_wypadkow)) + 
  geom_col(fill="lightblue") + 
  labs(title = "Liczba wypadków podczas podróży",
       x = "Rodzaj wypadku",
       y = "Liczba wypadków") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

max_incident_idx <- which.max(df$liczba_wypadkow)
```

Powyższy wykres przedstawia liczbę wypadków podczas podróży w zależności od rodzaju wypadku. Jak możemy zauważyć najczęściej pojawiającym się wypadkiem jest  „`r df[max_incident_idx, "rodzaj_wypadku"]`”. Sugeruje nam to, że na ten rodzaj wypadku powinniśmy jako firma zalecać ubezpieczenie się naszym klientom.

#### 6.2. Ubezpieczenia klientów w razie wypadków

```{r}
#| echo: false
#| warning: false
#| fig.align: "center"
#| fig-cap: "Wykres 12. Liczba wypadków według rodzaju"

query_2_2 <- "SELECT
    at.accident_type,
    i.type AS rodzaj_ubezpieczenia,
    IF(ic.id_accident IS NOT NULL, 1, 0) AS czy_pokrywa
FROM accident_report AS ar
LEFT JOIN payment AS p
    ON p.id_payment = ar.id_payment
INNER JOIN insurance AS i
    ON p.id_insurance = i.id_insurance
LEFT JOIN insurance_coverage AS ic
    ON ic.id_insurance = p.id_insurance
           AND ic.id_accident = ar.id_accident
LEFT JOIN accident_type AS at
ON at.id_accident = ar.id_accident;"

df <- dbGetQuery(con, query_2_2)

df$czy_pokrywa <- ifelse(df$czy_pokrywa == 1, "Tak", "Nie")
df$czy_pokrywa <- factor(df$czy_pokrywa, levels = c("Nie", "Tak"))


ggplot(df, aes(x = accident_type, fill = czy_pokrywa)) + 
  geom_bar() + 
  labs(title = "Liczba wypadków według rodzaju", 
       x = "Rodzaj wypadku", 
       y = "Liczba wypadków", 
       fill = "Czy ubezpieczenie \npokrywa wypadek") + 
  scale_fill_manual(values = c("Nie" = "lightpink", "Tak" = "lightblue")) + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

tak_df <- df %>%
  filter(czy_pokrywa == "Tak") %>%
  count(accident_type, name = "tak")

nie_df <- df %>%
  filter(czy_pokrywa == "Nie") %>%
  count(accident_type, name = "nie")

wynik <- full_join(tak_df, nie_df, by = "accident_type") %>%
  mutate(
    tak = replace_na(tak, 0),
    nie = replace_na(nie, 0),
    ratio = tak / (tak + nie),
    suma = tak + nie
  )

idx_suma_max <- which.max(wynik$suma)
ratio_suma_max <- wynik$ratio[idx_suma_max]
accident_suma_max <- wynik$accident_type[idx_suma_max]

idx_ratio_max <- which.max(wynik$ratio)
ratio_max <- wynik$ratio[idx_ratio_max]
accident_ratio_max <- wynik$accident_type[idx_ratio_max]
suma_ratio_max <- wynik$suma[idx_ratio_max]

idx_ratio_min <- which.min(wynik$ratio)
ratio_min <- wynik$ratio[idx_ratio_min]
accident_ratio_min <- wynik$accident_type[idx_ratio_min]
suma_ratio_min <- wynik$suma[idx_ratio_min]
```

Dla najczęściej pojawiającego się rodzaju wypadku, jakim jest „`r accident_suma_max`”, `r round(ratio_suma_max * 100,2)`% klientów posiada ubezpieczenie pokrywające koszty związane z tym wypadkiem. Dla wypadku: „`r accident_ratio_max`” stosunek klientów ubezpieczonych do wszystkich klientów, którzy tego wypadku doświadczyli, jest największy i wynosi `r round(ratio_max * 100,2)`%. Liczba tych wypadków wynosi `r suma_ratio_max`. Z kolei klienci najrzadziej posiadają ubezpieczenie na „`r accident_ratio_min`” w stosunku do liczby wypadków tego typu.

### 7. Ocena ofert

#### 7.1. Najlepiej oceniane wycieczki

Oceny wystawiane przez klientów po zakończonych wycieczkach są istotnym wskaźnikiem jakości oferty turystycznej. Stanowią one cenne źródło informacji dla firmy, pozwalające na identyfikację mocnych i słabych stron oraz monitorowanie poziomu satysfakcji uczestników. Klienci mają możliwość oceny wycieczki w pięciostopiowej skali (1-5). Przyjrzyjmy się zatem, jak klienci oceniają poszczególne wycieczki.

```{r}
#| echo: false
#| warning: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| fig-cap: "Wykres 13. Średnia ocena wycieczki w skali 1-5"

# Pobieramy dane
df <- dbGetQuery(con, "
  SELECT 
    opinion.rating,
    trip_type.trip_name,
    trip_type.force_side
  FROM opinion
  JOIN payment ON opinion.id_payment = payment.id_payment
  JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight
  JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
")

# Średnia ocena dla każdej wycieczki
srednie_oceny <- df %>%
  group_by(trip_name, force_side) %>%
  summarise(srednia_ocena = mean(rating, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(srednia_ocena))

# Wycieczka z najlepszą oceną
najlepsza_wycieczka <- srednie_oceny %>%
  slice_max(order_by = srednia_ocena, n = 1, with_ties = FALSE)

# Wycieczka z najgorszą oceną
najgorsza_wycieczka <- srednie_oceny %>%
  slice_min(order_by = srednia_ocena, n = 1, with_ties = FALSE)

# Wykres
ggplot(srednie_oceny, aes(x = reorder(trip_name, -srednia_ocena), y = srednia_ocena, fill = force_side)) +
  geom_col() +
  geom_text(aes(label = round(srednia_ocena, 2)), vjust = -0.3, size = 3) +
  scale_fill_manual(values = c("jasna" = "lightblue", "ciemna" = "pink")) +
  labs(
    title = "Średnia ocena wycieczki",
    x = "Wycieczka",
    y = "Średnia ocena",
    fill = "Strona mocy"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold", hjust = 0.5),
    axis.title = element_text(size = 9),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
    axis.text.y = element_text(size = 8),
    plot.margin = margin(1, 1, 2, 2, "cm") 
  )
```

Najlepiej ocenianą wycieczką jest `r najlepsza_wycieczka[1]`, z oceną `r round(najlepsza_wycieczka[3],2)`. Najmniej do gustu przypadła za to wycieczka `r najgorsza_wycieczka[1]`, gdzie ocena wyniosła `r round(najgorsza_wycieczka[3],2)`.

```{r}
#| echo: false
#| warning: false

# Sprawdzenie, czy najlepiej oceniana wycieczka jest też najpopularniejszą
czy_najlepsza_jest_najpopularniejsza <- najlepsza_wycieczka$trip_name == najwiecej_klientow$trip_name

```

`r if (czy_najlepsza_jest_najpopularniejsza) {   "Jak możemy zauważyć, najlepiej oceniana wycieczka pokrywa się z tą, która cieszy się największą popularnością wśród klientów. Potwierdza to **wykres 2.**, przedstawiający liczbę uczestników poszczególnych wycieczek." } else {   "Warto zauważyć, że najlepiej oceniana wycieczka nie jest jednocześnie tą najczęściej wybieraną przez klientów. Potwierdza to *wykres 2*, przedstawiający liczbę uczestników poszczególnych wycieczek. Może to oznaczać, że choć wycieczka cieszy się dużym uznaniem wśród uczestników, to jej charakter, cena lub dostępność sprawiają, że trafia do węższego grona." }`

### 8. Załoga i współpraca

#### 8.1. Najczęstsze pary pilot–przewodnik podczas wyjazdów

W ostatnim etapie analizy przyjrzano się składom załóg uczestniczących w wycieczkach, koncentrując się na współpracy między pilotami a przewodnikami. Celem było zidentyfikowanie par pracowników, które najczęściej odbywały wspólne wyjazdy. Analiza została przeprowadzona na podstawie danych zawartych w tabeli opisującej wszystkie zorganizowane wyprawy. Dla każdego wyjazdu wyodrębniono kombinacje pilot–przewodnik, a następnie obliczono częstotliwość ich wspólnych podróży, co pozwoliło wskazać najczęściej współpracujące duety.

```{r}
#| echo: false
#| warning: false

query_7 <- "WITH crews_with_max_flights AS (SELECT 
  CONCAT(e1.first_name, ' ', e1.last_name, ', ', e2.first_name, ' ', e2.last_name) AS imiona,
  COUNT(*) AS liczba_wyjazdów
FROM spaceflight AS s
INNER JOIN employee AS e1 ON s.id_pilot = e1.id_employee
INNER JOIN employee AS e2 ON s.id_guide = e2.id_employee
GROUP BY s.id_pilot, s.id_guide
HAVING COUNT(*) = (
  SELECT MAX(flight_count) FROM (
    SELECT COUNT(*) AS flight_count
    FROM spaceflight
    GROUP BY id_pilot, id_guide
  ) AS sub
))

SELECT GROUP_CONCAT(imiona SEPARATOR ' oraz ') AS crews_with_max_flights_combined FROM crews_with_max_flights"


df7 <- dbGetQuery(con, query_7)

```

```{r}
#| echo: false
#| warning: false
#| fig.width: 6
#| fig.height: 4
#| fig.align: "center"
#| fig-cap: "Wykres 14. Heatmapa wspólnych wyjazdów wybranych członków załogi"

crew_query <- "WITH pilot_names AS (SELECT id_employee, CONCAT(first_name, ' ', last_name) AS pilot_name FROM employee
WHERE id_employee IN (SELECT DISTINCT id_pilot FROM spaceflight)),

guide_names AS (SELECT id_employee, CONCAT(first_name, ' ', last_name) AS guide_name FROM employee
WHERE id_employee IN (SELECT DISTINCT id_guide FROM spaceflight))

SELECT e1.pilot_name AS pilot, e2.guide_name AS guide FROM spaceflight 
INNER JOIN pilot_names AS e1 ON spaceflight.id_pilot = e1.id_employee
INNER JOIN guide_names AS e2 ON spaceflight.id_guide = e2.id_employee"

crew_df <- dbGetQuery(con, crew_query)

crew_heatmap <- crew_df %>%
  count(pilot, guide, name = "flights")

ggplot(crew_heatmap, aes(x = factor(pilot), y = factor(guide), fill = flights)) +
  geom_tile(color = "white") +
  geom_text(aes(label = flights), color = "black") +
  scale_fill_gradient(low = "lightblue", high = "blue") +
  labs(title = "Liczba wspólnych lotów: pilot i przewodnik",
       x = "Imię pilota",
       y = "Imię przewodnika",
       fill = "Liczba lotów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Z wykresu powyżej możemy odczytać, że `r df7$crews_with_max_flights_combined` są członkami załogi, którzy wylatują ze sobą na wycieczki najczęściej. Może to oznaczać, że zgłaszają się do wyjazdów wspólnie, ponieważ dobrze im się współpracuje. Firma powinna wziąć to pod uwagę podczas planowania kolejnych lotów - jeżeli relacje pomiędzy pracownikami są dobre, znajduje to przełożenie na atmosferę całej wycieczki, a dzięki temu - również na pozytywną opinię klientów.

### 9. Podsumowanie

Przeprowadzone analizy umożliwiły wszechstronną ocenę sytuacji dotyczącej organizacji wypraw w kosmos. Stworzona baza danych stanowiła podstawę do przeanalizowania wielu kluczowych obszarów działalności firmy.

Dokonano analizy zysków i kosztów utrzymania, sprawdzono sezonowość popytu na wyprawy, jak również preferencje klientów dotyczące wyboru „jasnej” lub „ciemnej strony mocy”. Dodatkowo przeanalizowano przypadki wypadków podczas wypraw — określono ich rodzaje, skutki oraz sprawdzono, jak wygląda ubezpieczenie klientów w takiej sytuacji.

Najważniejsze wnioski z badań to:

-   Analiza klientów powracających i jednorazowych pokazała, które wycieczki cieszą się największą lojalnością i które wymagają poprawy, by zwiększyć wskaźnik powrotów.

-   `r if (str_5 == "Możemy zaobserwować, że liczba klientów, którzy wybrali jasną oraz ciemną stronę mocy, nie różni się znacznie - obydwie strony mocy cieszą się podobnym zainteresowaniem. Oznacza to, że firma może rozwijać swoją ofertę, przygotowując kolejne propozycje wycieczek zarówno z jasną, jak i ciemną stroną mocy.") {"Badanie preferencji klientów dotyczących strony mocy nie wykazało wyraźnej różnicy w zainteresowaniu konkretną stroną."} else {"Preferencje względem „strony mocy” ujawniły wyraźne zainteresowanie jedną stroną, co wskazuje na potrzebę rozbudowy oferty w tym kierunku."}`

-   Bezpieczeństwo i ubezpieczenia wykazały, że nie wszyscy klienci mają odpowiednie zabezpieczenie na najczęściej występujące wypadki, co sugeruje konieczność lepszego informowania i dostosowania produktów ubezpieczeniowych.

-   Oceny wycieczek pozwoliły wskazać najlepsze i najsłabsze oferty, dając kierunek do optymalizacji programów wypraw.

Tak przeprowadzone badania umożliwiły pełniejsze zrozumienie funkcjonowania firmy oraz identyfikowanie obszarów wymagających uwagi lub zmian. Wyniki stanowią solidną podstawę do podejmowania skuteczniejszych decyzji zarządczych w zakresie organizacji wypraw w kosmos, pozwalając na lepsze dopasowanie oferty do oczekiwań klientów i zwiększenie satysfakcji oraz bezpieczeństwa uczestników.

```{r}
#| echo: false
#zamykanie połączenia
dbDisconnect(con)
```
