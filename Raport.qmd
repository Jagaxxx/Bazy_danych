---
title: "Raport"
format: html
editor: visual
execute:
  eval: true
---

# Analiza danych firmy „Space-U”

Niniejszy raport został wykonany na zlecenie firmy „Space-U”, organizującej konsumenckie załogowe loty kosmiczne, a w szczególności wycieczki z jasną i ciemną stroną mocy w świecie Star Wars. Celem raportu jest analiza danych zebranych przez firmę podczas 2 lat obecności na rynku, która pozwoli na wyciągnięcie wniosków na temat dotychczasowej działalności: związanych z nią kosztów oraz zysków, a także stosunku klientów do proponowanej oferty. Dzięki temu, możliwe będzie wskazanie kierunku rozwoju dla firmy w najbliższej przyszłości.

Podczas analizy posłużymy się następującymi pytaniami badawczymi:

-   Które z proponowanych przez firmę rodzajów wycieczek cieszą się największą popularnością? Jak kształtuje się ich bilans zysków i strat? Czy są dla firmy opłacalne?
-   Czy na podstawie wykresu liczby obsłużonych klientów w każdym miesiącu działalności firmy możemy wyciągnąć wnioski, że firma się rozwija lub podupada?
-   Po których z proponowanych wycieczek klienci są skłonni wybrać się na kolejne, a po których nie wracają do firmy? Czy można na tej podstawie wycofać niektóre wycieczki z oferty?
-   Który z typów wycieczek cieszy się większą popularnością – wycieczki z jasną czy ciemną stroną mocy?
-   Jak często podczas wyjazdów zdarzają się wypadki konkretnych typów i jaka część klientów jest ubezpieczona na wypadek ich wystąpienia?
-   Czy wycieczki, którym klienci wystawiają najwyższe oceny, są również najchętniej wybierane?
-   Którzy spośród naszych pracowników (pilot i przewodnik) najczęściej latali wspólnie na wycieczki?

## Analiza

```{r}
#| echo: false
#| warning: false

library(dplyr)
library(DBI)
library(tidyr)
library(scales)
```

```{r}
#| echo: false
#| warning: false
library(RMariaDB)
library(ggplot2)

#połączenie z bazą danych
con <- dbConnect(RMariaDB::MariaDB(),
                 dbname = "team12",
                 username = "team12",
                 password = "te@mliz",
                 host = "giniewicz.it")
```

### Które z proponowanych przez firmę rodzajów wycieczek cieszą się największą popularnością? Jak kształtuje się ich bilans zysków i strat? Czy są dla firmy opłacalne?

Jednym z kluczowych elementów działalności firmy turystycznej jest dostosowywanie oferty do potrzeb i preferencji klientów. Dlatego analiza popularności poszczególnych rodzajów wycieczek jest niezwykle istotna z punktu widzenia planowania przyszłych działań marketingowych oraz rozwoju oferty. Pozwala to nie tylko na optymalizację zasobów, ale również na zwiększenie satysfakcji klientów poprzez oferowanie wyjazdów, które cieszą się największym zainteresowaniem.

Na podstawie danych zgromadzonych w bazie danych, możliwe było określenie, które wycieczki cieszyły się największą popularnością wśród klientów. Spójrzmy teraz na liczbę zorganizowanych lotów na poszczególne planety.

```{r}
#| echo: false
#| warning: false
#| fig.width: 9
#| fig.height: 8

### POPULARNOŚĆ WYCIECZEK ###

# Pobieramy dane
query1_1 <- "
SELECT trip_type.planet_name, trip_type.force_side
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip;
"

df1_1 <- dbGetQuery(con, query1_1)

# Zliczanie lotów na planetę
df1_1_summary <- df1_1 %>%
  group_by(planet_name) %>%
  summarise(
    liczba_lotow = n(),
    force_side = first(force_side),
    .groups = "drop"
  )

# Wykres
ggplot(df1_1_summary, aes(x = reorder(planet_name, -liczba_lotow),
                          y = liczba_lotow,
                          fill = force_side)) +
  geom_col() +
  geom_text(aes(label = liczba_lotow),
            vjust = -0.5, size = 5) +  # <- to dodaje wartości nad słupkami
  scale_fill_manual(values = c("jasna" = "blue", "ciemna" = "red")) +
  labs(title = "Popularność wycieczek",
       x = "Planeta",
       y = "Liczba lotów",
       fill = "Strona Mocy") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14),
    axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12),
    legend.title = element_text(size = 13),
    legend.text = element_text(size = 12)
  )

```

Teraz możemy zobaczyć, jak wygląda to w przypadku ilości obsłużonych podróżnych.

```{r}
#| echo: false
#| warning: false
#| fig.width: 9
#| fig.height: 8

df <- dbGetQuery(con, "
  SELECT 
    payment.id_payment,
    payment.id_spaceflight,
    spaceflight.id_trip,
    trip_type.planet_name,
    trip_type.force_side
  FROM payment
  JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight
  JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
")

# Liczby klientów
klienci_na_planete <- df %>%
  group_by(planet_name, force_side) %>%
  summarise(liczba_klientow = n(), .groups = "drop") %>%
  arrange(desc(liczba_klientow))

# Wykres
ggplot(klienci_na_planete, aes(x = reorder(planet_name, -liczba_klientow), y = liczba_klientow, fill = force_side)) +
  geom_col() +
  geom_text(aes(label = liczba_klientow), vjust = -0.5, size = 5) +
  scale_fill_manual(values = c("jasna" = "blue", "ciemna" = "red")) +
  labs(
    title = "Liczba klientów na planetę według strony mocy",
    x = "Planeta",
    y = "Liczba klientów",
    fill = "Strona mocy"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title = element_text(size = 14),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    axis.text.y = element_text(size = 12)
  )
```

#### Bilans zysków i strat poszczególnych rodzajów wycieczek

Analiza bilansu zysków i strat dla różnych typów wycieczek oferowanych przez firmę stanowi kluczowy element oceny rentowności działalności. Pozwala ona nie tylko ocenić, które rodzaje wycieczek generują największe przychody, ale również które wiążą się z najwyższymi kosztami operacyjnymi, co ma bezpośredni wpływ na ostateczny zysk netto.

W ramach analizy zestawiono przychody uzyskane z tytułu sprzedaży konkretnych rodzajów wycieczek z odpowiadającymi im kosztami – takimi jak zakwaterowanie, wyżywienie, opłaty przewodników, transport, naprawy pojazdów czy wydatki logistyczne. Dzięki temu możliwe było określenie, które typy wyjazdów są najbardziej opłacalne, a które przynoszą mniejsze zyski lub wręcz straty.

W tym celu posłużmy się najpierw średnią ceną wycieczki.

```{r}
#| echo: false
#| warning: false
#| fig.width: 14
#| fig.height: 8

# Pobranie danych
query <- "
SELECT 
  spaceflight.id_spaceflight,
  spaceflight.id_trip,
  spaceflight.departure_date,
  spaceflight.return_date,
  spaceflight.organization_cost,
  trip_type.planet_name,
  trip_type.daily_cost_per_participant,
  trip_type.customer_price_total,
  payment.id_payment
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
LEFT JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
"

df <- dbGetQuery(con, query)

# Przetwarzanie dat i czasu trwania
df <- df %>%
  mutate(
    departure_date = as.Date(departure_date),
    return_date = as.Date(return_date),
    duration_days = as.numeric(return_date - departure_date)
  )

# Liczbę klientów dla każdego lotu
liczba_klientow_df <- df %>%
  group_by(id_spaceflight) %>%
  summarise(liczba_klientow = n(), .groups = "drop")

# Scalenie z oryginalną ramką i usunięcie duplikatów płatności
df_unique <- df %>%
  distinct(id_spaceflight, .keep_all = TRUE) %>%
  left_join(liczba_klientow_df, by = "id_spaceflight")

# Koszty i przychody dla każdego lotu
df_obliczone <- df_unique %>%
  mutate(
    koszt_organizacji = organization_cost,
    koszt_utrzymania = duration_days * daily_cost_per_participant * liczba_klientow,
    koszt_calkowity = koszt_organizacji + koszt_utrzymania,
    przychod = liczba_klientow * customer_price_total
  )

# Średnie wartości dla każdej planety
srednie <- df_obliczone %>%
  group_by(planet_name) %>%
  summarise(
    sredni_koszt_organizacji = mean(koszt_organizacji),
    sredni_koszt_utrzymania = mean(koszt_utrzymania),
    sredni_koszt_lacznie = mean(koszt_calkowity),
    sredni_przychod = mean(przychod),
    srednia_roznica = sredni_przychod - sredni_koszt_lacznie,
    .groups = "drop"
  )

# Long format
dane_long <- srednie %>%
  select(planet_name, Koszty = sredni_koszt_lacznie, Przychód = sredni_przychod, Zysk = srednia_roznica) %>%
  pivot_longer(cols = -planet_name, names_to = "typ", values_to = "wartosc")

# Wykres
ggplot(dane_long, aes(x = planet_name, y = wartosc, fill = typ)) +
  geom_col(position = position_dodge(width = 0.9)) +
  geom_text(aes(label = ifelse(wartosc >= 1e6,
                               paste0(round(wartosc / 1e6, 1), " M"),
                               ifelse(wartosc >= 1e3,
                                      paste0(round(wartosc / 1e3, 1), " k"),
                                      round(wartosc)))),
            position = position_dodge(width = 0.9),
            vjust = -0.5, size = 4) +
  scale_y_continuous(labels = scales::label_number(big.mark = " ", decimal.mark = ",")) +
  scale_fill_manual(values = c("Koszty" = "red", "Przychód" = "blue", "Zysk" = "green")) +
  labs(
    title = "Średnie koszty, przychody i zysk z wycieczek na planetę",
    x = "Planeta",
    y = "Kwota",
    fill = "Rodzaj"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14),
    axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12),
    legend.title = element_text(size = 13),
    legend.text = element_text(size = 12)
  )
```

W celu uzyskania pełniejszego obrazu rentowności działalności firmy, przeprowadzono także analizę łącznych zysków generowanych przez wycieczki do poszczególnych planet, z uwzględnieniem liczby uczestników. W odróżnieniu od wcześniejszego zestawienia, które bazowało na średnich wartościach dla jednej wycieczki (jeden wylot), niniejsze podsumowanie uwzględnia realną skalę sprzedaży – czyli ilość podróżnych, którzy skorzystali z każdej z ofert. Takie podejście pozwala precyzyjnie określić, które kierunki nie tylko są popularne, ale również najbardziej dochodowe w ujęciu globalnym.

```{r}
#| echo: false
#| warning: false
#| fig.width: 14
#| fig.height: 8

query <- "
SELECT 
  spaceflight.id_spaceflight,
  spaceflight.id_trip,
  spaceflight.departure_date,
  spaceflight.return_date,
  spaceflight.organization_cost,
  trip_type.planet_name,
  trip_type.daily_cost_per_participant,
  trip_type.customer_price_total,
  payment.id_payment
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
LEFT JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
"

df <- dbGetQuery(con, query)

# Przetwarzanie dat i czasu trwania
df <- df %>%
  mutate(
    departure_date = as.Date(departure_date),
    return_date = as.Date(return_date),
    duration_days = as.numeric(return_date - departure_date)
  )

# Liczba klientów na każdy lot
liczba_klientow_df <- df %>%
  group_by(id_spaceflight) %>%
  summarise(liczba_klientow = n(), .groups = "drop")

# Scalenie z oryginalną ramką i usunięcie duplikatów płatności
df_unique <- df %>%
  distinct(id_spaceflight, .keep_all = TRUE) %>%
  left_join(liczba_klientow_df, by = "id_spaceflight")

# Koszty i przychody dla każdego lotu
df_obliczone <- df_unique %>%
  mutate(
    koszt_organizacji = organization_cost,
    koszt_utrzymania = duration_days * daily_cost_per_participant * liczba_klientow,
    koszt_calkowity = koszt_organizacji + koszt_utrzymania,
    przychod = liczba_klientow * customer_price_total
  )

# Sumowanie po planetach
suma <- df_obliczone %>%
  group_by(planet_name) %>%
  summarise(
    suma_koszt_organizacji = sum(koszt_organizacji),
    suma_koszt_utrzymania = sum(koszt_utrzymania),
    suma_koszt_lacznie = sum(koszt_calkowity),
    suma_przychod = sum(przychod),
    zysk = suma_przychod - suma_koszt_lacznie,
    .groups = "drop"
  )

# Long format
dane_long <- suma %>%
  select(planet_name, Koszty = suma_koszt_lacznie, Przychód = suma_przychod, Zysk = zysk) %>%
  pivot_longer(cols = -planet_name, names_to = "typ", values_to = "wartosc")

# Wykres
ggplot(dane_long, aes(x = planet_name, y = wartosc, fill = typ)) +
  geom_col(position = position_dodge(width = 0.9)) +
  geom_text(aes(label = ifelse(wartosc >= 1e6,
                               paste0(round(wartosc / 1e6, 1), " M"),
                               ifelse(wartosc >= 1e3,
                                      paste0(round(wartosc / 1e3, 1), " k"),
                                      round(wartosc)))),
            position = position_dodge(width = 0.9), 
            vjust = -0.5, size = 4) +
  scale_y_continuous(
    labels = label_number(big.mark = " ", decimal.mark = ",")
  ) +
  scale_fill_manual(values = c("Koszty" = "red", "Przychód" = "blue", "Zysk" = "green")) +
  labs(
    title = "Suma kosztów, przychodów i zysków z wycieczek na każdą planetę",
    x = "Planeta",
    y = "Kwota",
    fill = "Rodzaj"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14),
    axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12),
    legend.title = element_text(size = 13),
    legend.text = element_text(size = 12)
  )
```

#### Ostateczny bilans finansowy

W końcowym etapie analizy działalności firmy turystycznej dokonano całościowego podsumowania bilansu finansowego, obejmującego wszystkie kluczowe kategorie wpływające na rentowność przedsiębiorstwa. Zestawiono trzy główne elementy: koszty, przychody oraz zysk.

W skład całkowitych kosztów weszły:

-   Koszty organizacji wyjazdów,

-   Koszty utrzymania klientów podczas wycieczki,

-   Koszty utrzymania pracowników.

Przychody uwzględniają wszystkie wpływy uzyskane od klientów za zakupione wycieczki, bez względu na ich rodzaj czy kierunek. Dzięki temu możliwe było określenie ogólnej wartości sprzedaży usług turystycznych w analizowanym okresie.

Zysk został obliczony jako różnica między całkowitymi przychodami a sumą wszystkich kosztów – zarówno bezpośrednich (organizacja wyjazdów), jak i pośrednich (utrzymanie pracowników).

```{r}
#| echo: false
#| warning: false
#| fig.width: 9
#| fig.height: 8

query <- "
SELECT 
  spaceflight.id_spaceflight,
  spaceflight.id_trip,
  spaceflight.departure_date,
  spaceflight.return_date,
  spaceflight.organization_cost,
  trip_type.daily_cost_per_participant,
  trip_type.customer_price_total,
  payment.id_payment
FROM spaceflight
JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
LEFT JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
"
df <- dbGetQuery(con, query)

# Dane o pracownikach
employee_df <- dbGetQuery(con, "SELECT hire_date, leave_date, salary FROM employee")

# Czas trwania lotów
df <- df %>%
  mutate(
    departure_date = as.Date(departure_date),
    return_date = as.Date(return_date),
    duration_days = as.numeric(return_date - departure_date)
  )

# Liczba klientów na każdy lot
liczba_klientow_df <- df %>%
  group_by(id_spaceflight) %>%
  summarise(liczba_klientow = n(), .groups = "drop")

# Połączenie i usunięcie duplikatów płatności
df_unique <- df %>%
  distinct(id_spaceflight, .keep_all = TRUE) %>%
  left_join(liczba_klientow_df, by = "id_spaceflight")

# Koszty i przychody na lot
df_obliczone <- df_unique %>%
  mutate(
    koszt_organizacji = organization_cost,
    koszt_utrzymania = duration_days * daily_cost_per_participant * liczba_klientow,
    przychod = liczba_klientow * customer_price_total
  )

# SUMA kosztów i przychodów z lotów
suma_koszt_organizacji <- sum(df_obliczone$koszt_organizacji, na.rm = TRUE)
suma_koszt_utrzymania <- sum(df_obliczone$koszt_utrzymania, na.rm = TRUE)
suma_przychod <- sum(df_obliczone$przychod, na.rm = TRUE)

# Koszt wypłat pracowników
dzisiaj <- as.Date("2100-01-01")

employee_df <- employee_df %>%
  mutate(
    hire_date = as.Date(hire_date),
    leave_date = as.character(leave_date),
    leave_date = ifelse(is.na(leave_date) | leave_date == "None",
                        as.character(dzisiaj),
                        leave_date),
    leave_date = as.Date(leave_date),
    dni_pracy = as.numeric(leave_date - hire_date),
    miesiace_pracy = dni_pracy / 30,
    wyplata = miesiace_pracy * salary
  )

suma_wyplaty <- sum(employee_df$wyplata, na.rm = TRUE)

# Całkowite koszty i zysk
suma_koszt_calkowity <- suma_koszt_organizacji + suma_koszt_utrzymania + suma_wyplaty
zysk_firmy <- suma_przychod - suma_koszt_calkowity

df_wykres <- data.frame(
  Rodzaj = c("Koszty", "Przychód", "Zysk"),
  Kwota = c(suma_koszt_calkowity, suma_przychod, zysk_firmy)
)

ggplot(df_wykres, aes(x = Rodzaj, y = Kwota, fill = Rodzaj)) +
  geom_col(width = 0.6) +
  geom_text(
    aes(label = format(Kwota, big.mark = " ", scientific = FALSE)),
    vjust = -0.5,
    size = 5
  ) +
  scale_y_continuous(
    labels = label_number(big.mark = " ", decimal.mark = ",")
  ) +
  scale_fill_manual(values = c("Koszty" = "red", "Przychód" = "blue", "Zysk" = "green")) +
  labs(
    title = "Podsumowanie finansowe firmy",
    x = "",
    y = "Kwota"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title.y = element_text(size = 14),
    axis.text.x = element_text(size = 13),
    axis.text.y = element_text(size = 12),
    legend.position = "none"
  )
```

Ostatecznie uzyskano:

-   Koszt organizacji lotów wyniósł `r format(suma_koszt_organizacji, big.mark = " ", scientific = FALSE)`. Obejmuje on głównie wydatki związane z transportem oraz logistyką podróży.
-   Koszt utrzymania klientów podczas wycieczek wyniósł `r format(suma_koszt_utrzymania, big.mark = " ", scientific = FALSE)`. W skład tej kategorii wchodzą m.in. zakwaterowanie, wyżywienie, usługi przewodników i atrakcje w ramach programu wycieczki.
-   Wypłaty dla pracowników stanowiły `r format(suma_wyplaty, big.mark = " ", scientific = FALSE)`.

Łącznie koszty operacyjne firmy osiągnęły poziom `r format(suma_koszt_calkowity, big.mark = " ", scientific = FALSE)`. \
Z kolei przychód uzyskany ze sprzedaży wycieczek wyniósł `r format(suma_przychod, big.mark = " ", scientific = FALSE)`. \
Na tej podstawie obliczono zysk firmy, który wyniósł `r format(zysk_firmy, big.mark = " ", scientific = FALSE)`.

### Czy na podstawie wykresu liczby obsłużonych klientów w każdym miesiącu działalności firmy możemy wyciągnąć wnioski, że firma się rozwija lub podupada?

```{r}

```

### Po których z proponowanych wycieczek klienci są skłonni wybrać się na kolejne, a po których nie wracają do firmy? Czy można na tej podstawie wycofać niektóre wycieczki z oferty?

Kolejne zagadnienie dotyczy badania chęci wybierania się klientów na kolejne wycieczki z firmą. W tym celu klienci zostali podzieleni na 2 grupy: tych, którzy w ciągu 2 lat działalności „Space-U” wybrali się tylko na jeden wyjazd, oraz tych, którzy odwiedzili kilka miejsc. Dla każdej z grup zliczono wycieczki, które wybrano podczas pierwszych wylotów – pierwsze wrażenia zdecydowały o tym, czy klienci ponownie obdarzyli firmę zaufaniem, czy też nie.

```{r}
#| echo: false
#| warning: false
#| fig.width: 9
#| fig.height: 12

query3_1 <- "WITH more_than_one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) > 1))


SELECT trip_name AS nazwa_wycieczki, COUNT(*) AS liczba_klientów
FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY id_customer) AS rn
    FROM more_than_one_trip) AS subquery
WHERE rn = 1
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 3"

df3_1 <- dbGetQuery(con, query3_1)

query3_1_1 <- "WITH more_than_one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) > 1))

SELECT trip_name AS nazwa_najczesciej_powtarzanej_wycieczki, COUNT(*) AS liczba_klientów
FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY id_customer) AS rn
    FROM more_than_one_trip) AS subquery
WHERE rn = 1
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 1"

df3_1_1 <- dbGetQuery(con, query3_1_1)

most_repeated_trip <- df3_1_1$nazwa_najczesciej_powtarzanej_wycieczki


ggplot(df3_1, aes(x = df3_1$nazwa_wycieczki, y = df3_1$liczba_klientów)) +
  geom_col(fill = "lightblue") +
  labs(title = "Liczba klientów, którzy wrócili do firmy po danej wycieczce", x = "Nazwa wycieczki", y = "Liczba klientów") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

Klienci, którzy zdecydowali się wziąć udział w więcej niż jednym wyjeździe, najczęściej wykupowali za pierwszym razem następujące wycieczki: `r df3_1$nazwa_wycieczki[1]`, `r df3_1$nazwa_wycieczki[2]`, `r df3_1$nazwa_wycieczki[3]`. Najpopularniejszą wycieczką wśród nich była wycieczka o nazwie `r most_repeated_trip`, na którą wybrało się `r df3_1_1$liczba_klientów` klientów. Może to oznaczać, że zwiedzającym spodobał się klimat wycieczki, a w planie firmy na najbliższy czas należy uwzględnić organizację większej liczby wycieczek tego typu bądź wprowadzić do oferty więcej rodzajów wyjazdów w podobnym klimacie.

```{r}
#| echo: false
#| warning: false
#| fig.width: 9
#| fig.height: 12

query3_2 <- "WITH one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) = 1))

SELECT trip_name AS nazwa_wycieczki, COUNT(*) AS liczba_klientów
FROM one_trip
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 3"

df3_2 <- dbGetQuery(con, query3_2)

query3_2_1 <- "WITH one_trip AS (SELECT payment.id_customer AS id_customer, spaceflight.id_trip AS id_trip, trip_type.trip_name AS trip_name
FROM payment INNER JOIN spaceflight ON payment.id_spaceflight = spaceflight.id_spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
WHERE id_customer IN (
    SELECT id_customer FROM payment
    GROUP BY id_customer
    HAVING COUNT(id_spaceflight) = 1))

SELECT trip_name AS nazwa_wycieczki, COUNT(*) AS liczba_klientów
FROM one_trip
GROUP BY trip_name ORDER BY COUNT(*) DESC LIMIT 1"

df3_2_1 <- dbGetQuery(con, query3_2_1)

ggplot(df3_2, aes(x = df3_2$nazwa_wycieczki, y = df3_2$liczba_klientów)) +
  geom_col(fill = "lightblue") +
  labs(title = "Liczba klientów, którzy nie wrócili do firmy po danej wycieczce", x = "Nazwa wycieczki", y = "Liczba klientów") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

Klienci, którzy nie zdecydowali się ponownie wziąć udziału w wyjeździe organizowanym przez „Space-U", najczęściej wykupowali za pierwszym razem następujące wycieczki: `r df3_2$nazwa_wycieczki[1]`, `r df3_2$nazwa_wycieczki[2]`, `r df3_2$nazwa_wycieczki[3]`. Najczęściej wybieraną wśród nich wycieczką była wycieczka o nazwie `r df3_2_1$nazwa_wycieczki`, na którą wybrało się `r df3_2_1$liczba_klientów` klientów. Może to oznaczać, że zaproponowana wycieczka nie spotyka się z pozytywnym odbiorem wszystkich klientów, zatem należy wprowadzić zmiany w jej plan. W przypadku dalszego braku zainteresowania kolejnymi wyjazdami z firmą wśród klientów, którzy wybrali się na wycieczkę tego typu, należy zastanowić się nad wycofaniem wycieczki z oferty i zastąpieniem jej inną propozycją.

### Który z typów wycieczek cieszy się większą popularnością – wycieczki z jasną czy ciemną stroną mocy?

Firmę „Space-U” interesuje również, która ze stron mocy cieszy się większą popularnością wśród turystów - czy więcej osób wybiera się na wycieczki z jasną, czy z ciemną stroną mocy? Odpowiedź na to pytanie pomoże firmie lepiej dopasować ofertę wycieczek do oczekiwań klientów w najbliższej przyszłości. Aby uzyskać odpowiedź, liczymy, ile było rezerwacji wycieczek każdego z dwóch typów.

```{r}
#| echo: false
#| warning: false
#| fig.width: 9
#| fig.height: 12

query4 <- "SELECT force_side AS strona_mocy, COUNT(*) AS liczba_klientów
FROM spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
INNER JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
GROUP BY force_side ORDER BY COUNT(*) DESC"

df4 <- dbGetQuery(con, query4)

query4_1 <- "SELECT force_side AS strona_mocy, COUNT(*) AS liczba_klientów
FROM spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
INNER JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
GROUP BY force_side ORDER BY COUNT(*) DESC LIMIT 1"

more_popular_force_side <- dbGetQuery(con, query4_1)

query4_2 <- "SELECT force_side AS strona_mocy, COUNT(*) AS liczba_klientów
FROM spaceflight INNER JOIN trip_type ON spaceflight.id_trip = trip_type.id_trip
INNER JOIN payment ON spaceflight.id_spaceflight = payment.id_spaceflight
GROUP BY force_side ORDER BY COUNT(*) ASC LIMIT 1"

less_popular_force_side <- dbGetQuery(con, query4_2)

ggplot(df4, aes(x = df4$strona_mocy, y = df4$liczba_klientów)) +
  geom_col(fill = "lightblue") +
  labs(title = "Liczba klientów w zależności od strony mocy", x = "Strona mocy", y = "Liczba klientów")
```

Z powyższego wykresu odczytać można, że to `r more_popular_force_side$strona_mocy` strona mocy cieszy się większą popularnością wśród klientów firmy - na wycieczki tego typu wybrało się `r more_popular_force_side$liczba_klientów` klientów. Dla porównania, wycieczki oznaczone jako "`r less_popular_force_side$strona_mocy` strona mocy" wybrało `r less_popular_force_side$liczba_klientów` klientów. Wobec dużego zainteresowania klientów wyjazdami oznaczonymi jako "`r more_popular_force_side$strona_mocy` strona mocy", można wprowadzić do oferty firmy więcej wycieczek tego typu.

### Jak często podczas wyjazdów zdarzają się wypadki konkretnych typów i jaka część klientów jest ubezpieczona na wypadek ich wystąpienia?

```{r}

```

### Czy wycieczki, którym klienci wystawiają najwyższe oceny, są również najchętniej wybierane?

```{r}

```

### Którzy spośród naszych pracowników (pilot i przewodnik) najczęściej latali wspólnie na wycieczki?

Ostatnie pytanie dotyczy załogi statków - którzy spośród pracowników firmy najczęściej wybierają się wspólnie na wycieczki. Aby na nie odpowiedzieć, korzystamy z tabeli, w której opisano wszystkie zorganizowane wyjazdy - wybieramy wszystkie możliwe połączenia pilotów i przewodników oraz liczymy, jak często wyruszają ze sobą w podróże.

```{r}
#| echo: false
#| warning: false
#| fig.width: 9
#| fig.height: 12

query7 <- "SELECT s.id_pilot AS id_pilota, s.id_guide AS id_przewodnika, CONCAT(e1.first_name, ' ', e1.last_name, ', ', e2.first_name, ' ', 
e2.last_name) AS imiona, COUNT(*) AS liczba_wyjazdów
FROM spaceflight AS s INNER JOIN employee AS e1 ON s.id_pilot = e1.id_employee
INNER JOIN employee AS e2 ON s.id_guide = e2.id_employee
GROUP BY s.id_pilot, s.id_guide
ORDER BY COUNT(*) DESC"

df7 <- dbGetQuery(con, query7)

query7_1 <- "SELECT s.id_pilot AS id_pilota, s.id_guide AS id_przewodnika, CONCAT(e1.first_name, ' ', e1.last_name, ', ', e2.first_name, ' ', 
e2.last_name) AS imiona, COUNT(*) AS liczba_wyjazdów
FROM spaceflight AS s INNER JOIN employee AS e1 ON s.id_pilot = e1.id_employee
INNER JOIN employee AS e2 ON s.id_guide = e2.id_employee
GROUP BY s.id_pilot, s.id_guide
ORDER BY COUNT(*) DESC LIMIT 1"

df7_1 <- dbGetQuery(con, query7_1)

ggplot(df7, aes(x = df7$imiona, y = df7$liczba_wyjazdów)) +
  geom_col(fill = "lightblue") +
  labs(title = "Liczba wspólnych wyjazdów wybranych członków załogi", x = "Załoga", y = "Liczba wyjazdów") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

Z wykresu powyżej możemy odczytać, że `r df7_1$imiona` są członkami załogi, którzy wylatują ze sobą na wycieczki najczęściej. Może to oznaczać, że zgłaszają się do wyjazdów wspólnie, ponieważ dobrze im się współpracuje. Firma powinna wziąć to pod uwagę podczas planowania kolejnych lotów - jeżeli relacje pomiędzy pracownikami są dobre, znajduje to przełożenie na atmosferę całej wycieczki, a dzięki temu - również na pozytywną opinię klientów.

```{r}
#| echo: false
#zamykanie połączenia
dbDisconnect(con)
```
